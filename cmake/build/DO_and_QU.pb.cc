// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DO_and_QU.proto

#include "DO_and_QU.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace DO_and_QU {
PROTOBUF_CONSTEXPR PublicKeyRequest::PublicKeyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.publickey_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PublicKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublicKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublicKeyRequestDefaultTypeInternal() {}
  union {
    PublicKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublicKeyRequestDefaultTypeInternal _PublicKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR ParameterReply::ParameterReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameter_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ParameterReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParameterReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParameterReplyDefaultTypeInternal() {}
  union {
    ParameterReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParameterReplyDefaultTypeInternal _ParameterReply_default_instance_;
}  // namespace DO_and_QU
static ::_pb::Metadata file_level_metadata_DO_5fand_5fQU_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_DO_5fand_5fQU_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_DO_5fand_5fQU_2eproto = nullptr;

const uint32_t TableStruct_DO_5fand_5fQU_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DO_and_QU::PublicKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DO_and_QU::PublicKeyRequest, _impl_.publickey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DO_and_QU::ParameterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DO_and_QU::ParameterReply, _impl_.parameter_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::DO_and_QU::PublicKeyRequest)},
  { 7, -1, -1, sizeof(::DO_and_QU::ParameterReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::DO_and_QU::_PublicKeyRequest_default_instance_._instance,
  &::DO_and_QU::_ParameterReply_default_instance_._instance,
};

const char descriptor_table_protodef_DO_5fand_5fQU_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017DO_and_QU.proto\022\tDO_and_QU\"%\n\020PublicKe"
  "yRequest\022\021\n\tpublicKey\030\001 \001(\t\"#\n\016Parameter"
  "Reply\022\021\n\tparameter\030\001 \003(\t2P\n\007Greeter\022E\n\tP"
  "ublicKey\022\033.DO_and_QU.PublicKeyRequest\032\031."
  "DO_and_QU.ParameterReply\"\000b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_DO_5fand_5fQU_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_DO_5fand_5fQU_2eproto = {
    false, false, 194, descriptor_table_protodef_DO_5fand_5fQU_2eproto,
    "DO_and_QU.proto",
    &descriptor_table_DO_5fand_5fQU_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_DO_5fand_5fQU_2eproto::offsets,
    file_level_metadata_DO_5fand_5fQU_2eproto, file_level_enum_descriptors_DO_5fand_5fQU_2eproto,
    file_level_service_descriptors_DO_5fand_5fQU_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_DO_5fand_5fQU_2eproto_getter() {
  return &descriptor_table_DO_5fand_5fQU_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_DO_5fand_5fQU_2eproto(&descriptor_table_DO_5fand_5fQU_2eproto);
namespace DO_and_QU {

// ===================================================================

class PublicKeyRequest::_Internal {
 public:
};

PublicKeyRequest::PublicKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:DO_and_QU.PublicKeyRequest)
}
PublicKeyRequest::PublicKeyRequest(const PublicKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PublicKeyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.publickey_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.publickey_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.publickey_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_publickey().empty()) {
    _this->_impl_.publickey_.Set(from._internal_publickey(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:DO_and_QU.PublicKeyRequest)
}

inline void PublicKeyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.publickey_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.publickey_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.publickey_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PublicKeyRequest::~PublicKeyRequest() {
  // @@protoc_insertion_point(destructor:DO_and_QU.PublicKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PublicKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.publickey_.Destroy();
}

void PublicKeyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PublicKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DO_and_QU.PublicKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.publickey_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublicKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string publicKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_publickey();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "DO_and_QU.PublicKeyRequest.publicKey"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PublicKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DO_and_QU.PublicKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string publicKey = 1;
  if (!this->_internal_publickey().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_publickey().data(), static_cast<int>(this->_internal_publickey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DO_and_QU.PublicKeyRequest.publicKey");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_publickey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DO_and_QU.PublicKeyRequest)
  return target;
}

size_t PublicKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DO_and_QU.PublicKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string publicKey = 1;
  if (!this->_internal_publickey().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_publickey());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PublicKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PublicKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PublicKeyRequest::GetClassData() const { return &_class_data_; }


void PublicKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PublicKeyRequest*>(&to_msg);
  auto& from = static_cast<const PublicKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DO_and_QU.PublicKeyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_publickey().empty()) {
    _this->_internal_set_publickey(from._internal_publickey());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PublicKeyRequest::CopyFrom(const PublicKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DO_and_QU.PublicKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublicKeyRequest::IsInitialized() const {
  return true;
}

void PublicKeyRequest::InternalSwap(PublicKeyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.publickey_, lhs_arena,
      &other->_impl_.publickey_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PublicKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DO_5fand_5fQU_2eproto_getter, &descriptor_table_DO_5fand_5fQU_2eproto_once,
      file_level_metadata_DO_5fand_5fQU_2eproto[0]);
}

// ===================================================================

class ParameterReply::_Internal {
 public:
};

ParameterReply::ParameterReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:DO_and_QU.ParameterReply)
}
ParameterReply::ParameterReply(const ParameterReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ParameterReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parameter_){from._impl_.parameter_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DO_and_QU.ParameterReply)
}

inline void ParameterReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parameter_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ParameterReply::~ParameterReply() {
  // @@protoc_insertion_point(destructor:DO_and_QU.ParameterReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ParameterReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parameter_.~RepeatedPtrField();
}

void ParameterReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ParameterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:DO_and_QU.ParameterReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameter_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParameterReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string parameter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_parameter();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "DO_and_QU.ParameterReply.parameter"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ParameterReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DO_and_QU.ParameterReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string parameter = 1;
  for (int i = 0, n = this->_internal_parameter_size(); i < n; i++) {
    const auto& s = this->_internal_parameter(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DO_and_QU.ParameterReply.parameter");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DO_and_QU.ParameterReply)
  return target;
}

size_t ParameterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DO_and_QU.ParameterReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string parameter = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.parameter_.size());
  for (int i = 0, n = _impl_.parameter_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.parameter_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParameterReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ParameterReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParameterReply::GetClassData() const { return &_class_data_; }


void ParameterReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ParameterReply*>(&to_msg);
  auto& from = static_cast<const ParameterReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DO_and_QU.ParameterReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameter_.MergeFrom(from._impl_.parameter_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParameterReply::CopyFrom(const ParameterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DO_and_QU.ParameterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterReply::IsInitialized() const {
  return true;
}

void ParameterReply::InternalSwap(ParameterReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parameter_.InternalSwap(&other->_impl_.parameter_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DO_5fand_5fQU_2eproto_getter, &descriptor_table_DO_5fand_5fQU_2eproto_once,
      file_level_metadata_DO_5fand_5fQU_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace DO_and_QU
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::DO_and_QU::PublicKeyRequest*
Arena::CreateMaybeMessage< ::DO_and_QU::PublicKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DO_and_QU::PublicKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::DO_and_QU::ParameterReply*
Arena::CreateMaybeMessage< ::DO_and_QU::ParameterReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DO_and_QU::ParameterReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
